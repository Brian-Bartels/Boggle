{"version":3,"sources":["utils/constants.js","utils/request.js","components/Boggle/Boggle.js","style.js","components/Boggle/BoggleCharacter.js","components/Grid/Grid.js","components/Button/Button.js","components/Text/Text.js","components/Boggle/BoggleLayout.js","index.js"],"names":["MimeType","IMAGE","PLAIN","HTML","JSON","Header","request","RegExp","Date","url","options","type","Request","FULL","a","fetch","res","RAW","STATUS","status","parseResponse","response","contentType","headers","get","test","json","buffer","text","Boggle","min","max","Math","ceil","floor","random","collection","randomIntExclusive","length","A","B","rounds","N","i","j","swap","constructor","build","this","boardSize","DEFAULT_BOARD_SIZE","minWordSize","DEFAULT_MINIMUM_WORD_SIZE","minConsonantCount","DEFAULT_MINIMUM_CONSONANT_COUNT","minVowelCount","DEFAULT_MINIMUM_VOWEL_COUNT","populateBoard","createBoard","defaultValue","Array","from","fill","chars","board","boardState","push","randomChoice","VOWELS","CONSONANTS","shuffle","r","c","pop","isValidPos","px","nx","abs","validateWord","word","alert","undefined","method","valid","validateSelect","nr","nc","pr","pc","validateUnselect","BoggleBuiler","withWordSize","wordSize","withVowelCount","vowelCount","withConsonantCount","consonantCount","style","Grid","display","gridTemplateAreas","gridRowGap","gridColumnGap","padding","fluid","alignItems","justifyItems","height","Word","gridArea","fontSize","fontFamily","textTransform","letterSpacing","Time","StartButton","justifySelf","margin","SubmitWordButton","alignSelf","ClearWordButton","GameBoard","gridTemplateRows","gridTemplateColumns","cursor","GameCharacter","gridColumnStart","gridRowStart","background","fontWeight","borderStyle","borderSize","boxShadow","textAlign","width","BoggleCharacter","char","row","col","isSelected","isLast","handleClick","borderColor","opacity","onClick","children","Button","disabled","Text","BoggleLayout","Component","state","initialGameState","handleStart","tempTime","startTime","interval","clearInterval","setState","time","startCountdown","handleInvalidSelection","window","handleInvalidUnselection","toggleSelected","Game","handleSubmitWord","confirm","document","createElement","target","href","e","createEvent","initMouseEvent","dispatchEvent","handleResetWord","score","map","join","renderBoard","key","String","seconds","snd","Audio","setInterval","currentTime","play","handleChange","event","value","isNaN","parseInt","render","RestartButton","onChange","getElementById"],"mappings":"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","file":"static/js/main.41949cce.chunk.js","sourcesContent":["export const isClient = typeof window === \"object\";\nexport const isServer = typeof window !== \"object\";\nexport const isDevelopment = process.env.NODE_ENV === \"development\";\nexport const isProduction = process.env.NODE_ENV === \"production\";\n\nexport const MimeType = {\n  IMAGE: /^image/,\n  PLAIN: /^text\\/plain/,\n  HTML: /^text\\/html/,\n  JSON: /^application\\/json/\n};\n\nexport const Header = {\n  CONTENT_TYPE: \"content-type\",\n  LOCATION: \"location\",\n  AUTHORIZATION: \"authorization\",\n  IF_MATCH: \"if-match\",\n  IF_NONE_MATCH: \"if-none-match\",\n  IF_MODIFIED_SINCE: \"if-modified-since\",\n  IF_UNMODIFIED_SINCE: \"if-unmodified-since\"\n};\n\nexport const PrimitiveType = {\n  BOOLEAN: \"boolean\",\n  FUNCTION: \"function\",\n  NUMBER: \"number\",\n  OBJECT: \"object\",\n  STRING: \"string\",\n  SYMBOL: \"symbol\",\n  UNDEFINED: \"undefined\"\n};\n\nexport const InstanceType = {\n  OBJECT: Object,\n  ARRAY: Array,\n  REGEXP: RegExp,\n  DATE: Date\n};\n","/**\n * Requests a URL, returning a promise\n *\n * @param  {string} url           The URL we want to request\n * @param  {object} [options]     The options we want to pass to \"fetch\"\n * @param  {boolean} [check]      Whether to throw an error for non OK status codes (e.g. < 200 or >= 300)\n *\n * @return {object}           The response data\n */\nimport { Header, MimeType } from \"./constants\";\n\nconst request = async (url, options, type = Request.FULL) => {\n  const res = await fetch(url, options);\n  switch (true) {\n    case type === Request.RAW:\n      return res;\n    case type === Request.STATUS:\n      return res.status;\n    case type === Request.FULL:\n    default:\n      return await parseResponse(res);\n  }\n};\n\n/**\n * Parses the JSON returned by a network request\n *\n * @param  {object} response A response from a network request\n *\n * @return {object}          The parsed JSON from the request\n */\n\nconst parseResponse = async response => {\n  const contentType = response.headers.get(Header.CONTENT_TYPE);\n\n  switch (true) {\n    case MimeType.JSON.test(contentType):\n      return await response.json();\n    case MimeType.IMAGE.test(contentType):\n      return await response.buffer(); // buffer\n    case MimeType.HTML.test(contentType):\n    case MimeType.PLAIN.test(contentType):\n    default:\n      return await response.text();\n  }\n};\n\nexport const Request = {\n  RAW: \"raw\",\n  STATUS: \"status\",\n  FULL: \"full\"\n};\n\nexport default request;\n","import request from \"../../utils/request\";\n\nexport class Boggle {\n  static VOWELS = \"aeiou\";\n  static CONSONANTS = \"bcdfghjklmnpqrstvwxyz\";\n\n  // Board\n  static DEFAULT_BOARD_SIZE = 4;\n  static DEFAULT_MINIMUM_WORD_SIZE = 3;\n  static DEFAULT_MINIMUM_VOWEL_COUNT = 4;\n  static DEFAULT_MINIMUM_CONSONANT_COUNT = 4;\n\n  static randomIntExclusive(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min)) + min;\n  }\n\n  static randomChoice(collection) {\n    const choice = Boggle.randomIntExclusive(0, collection.length);\n    return collection[choice];\n  }\n\n  static swap(collection, A, B) {\n    [collection[A], collection[B]] = [collection[B], collection[A]];\n  }\n\n  static shuffle(collection, rounds = 3) {\n    const N = collection.length;\n\n    for (let i = 0; i < N * rounds; i++) {\n      const j = Boggle.randomIntExclusive(0, N);\n      Boggle.swap(collection, i % N, j);\n    }\n  }\n\n  constructor(build) {\n    this.boardSize = build.boardSize || Boggle.DEFAULT_BOARD_SIZE;\n    this.minWordSize = build.minWordSize || Boggle.DEFAULT_MINIMUM_WORD_SIZE;\n    this.minConsonantCount = build.minConsonantCount || Boggle.DEFAULT_MINIMUM_CONSONANT_COUNT;\n    this.minVowelCount = build.minVowelCount || Boggle.DEFAULT_MINIMUM_VOWEL_COUNT;\n    this.populateBoard();\n  }\n\n  createBoard(N, defaultValue) {\n    return Array.from(new Array(N), () => new Array(N).fill(defaultValue));\n  }\n\n  populateBoard() {\n    const chars = [];\n    const N = this.boardSize;\n    this.board = this.createBoard(N);\n    this.boardState = this.createBoard(N, false);\n\n    // Generate required vowel quantity\n    for (let i = 0; i < this.minVowelCount; i++) {\n      chars.push(Boggle.randomChoice(Boggle.VOWELS));\n    }\n\n    // Generate required consonant quantity\n    for (let i = 0; i < this.minConsonantCount; i++) {\n      chars.push(Boggle.randomChoice(Boggle.CONSONANTS));\n    }\n\n    // Generate remaining vowel/consonant quantity\n    while (chars.length < N * N) {\n      chars.push(Boggle.randomChoice(Boggle.VOWELS + Boggle.CONSONANTS));\n    }\n\n    Boggle.shuffle(chars);\n\n    for (let r = 0; r < N; r++) {\n      for (let c = 0; c < N; c++) {\n        this.board[r][c] = chars.pop();\n      }\n    }\n  }\n\n  isValidPos(px, nx) {\n    const N = this.boardSize;\n    return nx >= 0 && nx < N && Math.abs(px - nx) <= 1;\n  }\n\n  async validateWord(word) {\n    if (word.length < this.minWordSize) {\n      alert(\"Not long enough\");\n      return undefined;\n    }\n\n    var valid = await request(`https://www.dictionaryapi.com/api/v3/references/collegiate/json/${word}?key=47717a3f-34b8-42a4-95b8-e13af1d30ff0`, {\n      method: \"GET\",\n    });\n    if (valid.length === 0 || typeof(valid[0]) === 'string') {\n      alert(\"Not a word\");\n      return undefined;\n    } else {\n      return `https://www.merriam-webster.com/dictionary/${word}`;\n    }\n  }\n\n  validateSelect(word, [nr, nc]) {\n    if (!word.length) return true;\n\n    const [pr, pc] = word[word.length - 1];\n\n    return this.isValidPos(pr, nr) && this.isValidPos(pc, nc);\n  }\n\n  validateUnselect(word, [nr, nc]) {\n    if (!word.length) return false;\n\n    const [pr, pc] = word[word.length - 1];\n\n    return pr === nr && pc === nc;\n  }\n}\n\nexport class BoggleBuiler {\n  withWordSize({ wordSize }) {\n    this.minWordSize = wordSize;\n    return this;\n  }\n\n  withVowelCount({ vowelCount }) {\n    this.minVowelCount = vowelCount;\n    return this;\n  }\n\n  withConsonantCount({ consonantCount }) {\n    this.minConsonantCount = consonantCount;\n    return this;\n  }\n\n  build() {\n    return new Boggle(this);\n  }\n}\n","const style = {\n  Grid: {\n    display: \"grid\",\n    gridTemplateAreas:\n      '\"start word word word\" \"board board board board\" \"submit clear entry time\"',\n    //gridTemplateRows: \"auto minmax(auto, 10%) auto\",\n    //gridTemplateColumns: \"auto auto minmax(auto, 15%) minmax(auto, 15%)\",\n    gridRowGap: \"1rem\",\n    gridColumnGap: \"2rem\",\n    padding: \"1rem 4rem 1rem\",\n    fluid: \"true\",\n    alignItems: \"center\",\n    justifyItems: \"center\",\n    height: \"100%\"\n  },\n  Word: {\n    gridArea: \"word\",\n    fontSize: \"2.5rem\",\n    fontFamily: \"Concert One, cursive\",\n    textTransform: \"uppercase\",\n    letterSpacing: \"0.25rem\"\n  },\n  Time: {\n    gridArea: \"time\",\n    fontSize: \"2.5rem\",\n    fontFamily: \"Concert One, cursive\",\n    textTransform: \"uppercase\",\n    letterSpacing: \"0.25rem\"\n  },\n  StartButton: {\n    gridArea: \"start\",\n    justifySelf: \"flex-end\",\n    margin: \"1rem\"\n  },\n  SubmitWordButton: {\n    gridArea: \"submit\",\n    alignSelf: \"flex-start\",\n    justifySelf: \"flex-end\",\n    margin: \"1rem\"\n  },\n  ClearWordButton: {\n    gridArea: \"clear\",\n    alignSelf: \"flex-start\",\n    justifySelf: \"flex-start\",\n    margin: \"1rem\"\n  },\n  GameBoard: N => ({\n    display: \"grid\",\n    gridArea: \"board\",\n    gridTemplateRows: `repeat(${N}, auto)`,\n    gridTemplateColumns: `repeat(${N}, auto)`,\n    gridRowGap: \"0.4rem\",\n    gridColumnGap: \"0.4rem\",\n    justifyItems: \"center\",\n    alignItems: \"center\",\n    cursor: \"pointer\"\n  }),\n  GameCharacter: {\n    fontSize: \"3.5rem\",\n    fontFamily: \"Concert One, cursive\",\n    textTransform: \"uppercase\",\n    gridColumnStart: \"auto\",\n    gridRowStart: \"auto\",\n    background: \"linear-gradient(to top right, #ecca68, #f1c87f)\",\n    fontWeight: 550,\n    borderStyle: \"solid\",\n    borderSize: \"0.5rem\",\n    boxShadow: \"0.2rem 0.2rem 0.2rem #888888\",\n    textAlign: \"center\",\n    width: \"5rem\",\n    height: \"5rem\",\n    padding: \"1.5rem\"\n  },\n};\n\nexport default style;\n","import React from \"react\";\n\nconst BoggleCharacter = ({ char, row, col, isSelected, isLast, handleClick, style }) => {\n  style = {\n    borderColor: isLast ? \"yellow\" : isSelected ? \"blue\" : \"black\",\n    opacity: isSelected ? \"0.60\" : \"1.0\",\n    ...style\n  };\n\n  return (\n    <div style={style} onClick={() => handleClick(row, col)}>\n      {char}\n    </div>\n  );\n};\n\nexport default BoggleCharacter;\n","import React from \"react\";\n\nconst Grid = ({ children, style }) => {\n  return <section style={style}>{children}</section>;\n};\n\nexport default Grid;\n","import React from \"react\";\n\nconst Button = ({ text, disabled, handleClick, style }) => {\n  return (\n    <div style={style}>\n      <button disabled={disabled} onClick={handleClick}>\n        {text}\n      </button>\n    </div>\n  );\n};\n\nexport default Button;\n","import React from \"react\";\n\nconst Text = ({ text, style }) => {\n  return (\n    <div style={style}>\n      <h3>{text}</h3>\n    </div>\n  );\n};\n\nexport default Text;\n","import React, { Component } from \"react\";\nimport { BoggleBuiler } from \"./Boggle\";\nimport style from \"../../style\";\nimport BoggleCharacter from \"./BoggleCharacter\";\nimport Grid from \"../Grid/Grid\";\nimport Button from \"../Button/Button\";\nimport Text from \"../Text/Text\";\n\nclass BoggleLayout extends Component {\n\n  static get initialGameState() {\n    return {\n      score: 0,\n      word: [],\n      time: 120,\n      startTime: 120,\n      Game: new BoggleBuiler().build()\n    };\n  }\n\n  state = BoggleLayout.initialGameState;\n\n  get word() {\n    return this.state.word.map(([r, c]) => this.state.Game.board[r][c]).join(\"\");\n  }\n\n  renderBoard() {\n    const N = this.state.Game.boardSize;\n    const word = this.state.word;\n    const board = this.state.Game.board;\n    const boardState = this.state.Game.boardState;\n    const isLast = (r, c) => word.length && word[word.length - 1][0] === r && word[word.length - 1][1] === c;\n    const chars = [];\n\n    for (let r = 0; r < N; r++) {\n      for (let c = 0; c < N; c++) {\n        chars.push(\n          <BoggleCharacter\n            key={String(r) + String(c)}\n            handleClick={this.toggleSelected}\n            char={board[r][c]}\n            isLast={isLast(r, c)}\n            isSelected={boardState[r][c]}\n            row={r}\n            col={c}\n            style={style.GameCharacter}\n          />\n        );\n      }\n    }\n\n    return chars;\n  }\n\n  ////////////////////////\n  // Event Handlers\n  ////////////////////////\n  handleStart = () => {\n    var tempTime = this.state.startTime;\n    if (this.state.interval !== undefined) {\n      clearInterval(this.state.interval);\n    }\n    this.setState(BoggleLayout.initialGameState);\n    this.setState({time: tempTime, startTime: tempTime});\n    this.startCountdown(this.state.time);\n  };\n\n  async startCountdown(seconds) {\n    var snd = new Audio(\"data:audio/wav;base64,\");  \n      \n    const interval = setInterval(() => {\n      this.setState({\n        time: this.state.time - 1\n      });\n      if (this.state.time <= 0) {\n        clearInterval(interval);\n        snd.currentTime = 0;\n        snd.play();\n      }\n    }, 1000);\n    this.setState({interval});\n    return;\n  }\n\n  handleInvalidSelection = () => {\n    window.alert(\"Selected character must be adjacent (horizontal, vertical, or diagonal) to last selected character\");\n  };\n\n  handleInvalidUnselection = () => {\n    window.alert(\"Unselected character must be the same as last selected character\");\n  };\n\n  toggleSelected = (r, c) => {\n    let word = this.state.word;\n\n    const Game = this.state.Game;\n    const state = !Game.boardState[r][c];\n\n    if (state) {\n      if (Game.validateSelect(word, [r, c])) {\n        Game.boardState[r][c] = state;\n        word.push([r, c]);\n      } else {\n        this.handleInvalidSelection();\n      }\n    } else {\n      if (Game.validateUnselect(word, [r, c])) {\n        Game.boardState[r][c] = state;\n        word.pop();\n      } else {\n        this.handleInvalidUnselection();\n      }\n    }\n\n    this.setState({\n      Game,\n      word\n    });\n  };\n\n  handleSubmitWord = async () => {\n    const Game = this.state.Game;\n\n    var url = await Game.validateWord(this.word);\n\n    if (url) {\n      if (window.confirm(\"It's a word! Click Okay to load full definition\")) \n      {\n        // Create link in memory\n        var a = window.document.createElement(\"a\");\n        a.target = '_blank';\n        a.href = url;\n    \n        // Dispatch fake click\n        var e = window.document.createEvent(\"MouseEvents\");\n        e.initMouseEvent(\"click\", true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n        a.dispatchEvent(e);\n      };\n    }\n\n    this.setState(\n      {\n        Game\n      },\n      this.handleResetWord\n    );\n  };\n\n  handleResetWord = () => {\n    const Game = this.state.Game;\n    Game.boardState = Game.createBoard(Game.boardSize, false);\n\n    this.setState({\n      Game,\n      word: []\n    });\n  };\n\n  handleChange(event) {\n    if (event.target.value === \"\") {\n      this.setState({startTime: 0});\n    } else if (!isNaN(String(event.target.value))) {\n      this.setState({startTime: parseInt(event.target.value, 10)});\n    }\n  }\n\n  render() {\n    const { Game } = this.state;\n\n    return (\n      <Grid style={style.Grid}>\n\n        {/*TOP*/}\n        <Button text=\"New Game\" style={style.RestartButton} handleClick={this.handleStart} />\n        <Text style={style.Word} text={this.word} />\n\n        {/*MIDDLE*/}\n        <Grid style={style.GameBoard(Game.boardSize)}>{this.renderBoard()}</Grid>\n\n        {/*BOTTOM*/}\n        <Button text=\"Submit Word\" disabled={!this.state.word.length} style={style.SubmitWordButton} handleClick={this.handleSubmitWord} />\n        <Button text=\"Clear Word\" disabled={!this.state.word.length} style={style.ClearWordButton} handleClick={this.handleResetWord} />\n        <label>\n          Total Seconds: \n          <input type=\"text\" value={this.state.startTime} onChange={(event) => this.handleChange(event)}/>\n        </label>\n        <Text style={style.Time} text={this.state.time} />\n      </Grid>\n    );\n  }\n}\n\nexport default BoggleLayout;\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport \"./index.css\";\nimport BoggleLayout from \"./components/Boggle/BoggleLayout\";\n\nrender(<BoggleLayout />, document.getElementById(\"root\"));\n"],"sourceRoot":""}